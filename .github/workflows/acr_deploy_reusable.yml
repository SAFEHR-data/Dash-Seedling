name: Build and Deploy to ACR Reusable

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
    secrets:
      ACR_NAME:
        description: "Name of the Azure container registry to deploy to"
        required: true
      ACR_USERNAME:
        description: "Token name to login to the ACR"
        required: true
      ACR_PASSWORD:
        description: "Token password to login to the ACR"
        required: true
      IMAGE_NAME:
        description: "Name of the docker image to push to the ACR"
        required: true
      ARM_CLIENT_ID:
        required: false
      ARM_CLIENT_SECRET:
        required: false
      ARM_SUBSCRIPTION_ID:
        required: false
      ARM_TENANT_ID:
        required: false
      WEBAPP_ID:
        required: false
      SLOT_NAME:
        required: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Set image tag
        id: set
        run: |
          if [ ${{ secrets.ARM_CLIENT_ID }} != "" ]; then
            echo "Have a service principal. Will tag image with commit SHA"
            tag="${{ github.sha }}"
          else
            echo "No service principal. Tagging with latest and assuming webhook"
            tag="latest"
          fi
          echo "tag=$tag" >> $GITHUB_OUTPUT
          acr_uri="${{ secrets.ACR_NAME }}.azurecr.io"
          echo "remote_image_full_tag=$acr_uri/${{ secrets.IMAGE_NAME }}:$tag" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and deploy
        env:
          ENVIRONMENT: ${{ inputs.environment }}
          ACR_NAME: ${{ secrets.ACR_NAME }}
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          REMOTE_IMAGE_FULL_TAG: ${{ steps.set.outputs.remote_image_full_tag }}
          DOCKER_BUILDKIT: 1 
        run: make deploy

      - name: Azure login
        if: steps.set.outputs.tag != 'latest'
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
      
      - name: Bump webapp image tag
        if: steps.set.outputs.tag != 'latest'
        run: |
          az webapp config container set \
            --docker-custom-image-name ${{ steps.set.outputs.remote_image_full_tag }} \
            --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }} \
            --docker-registry-server-url https://${{ secrets.ACR_NAME }}.azurecr.io \
            --ids ${{ secrets.WEBAPP_ID }} \
            --slot ${{ secrets.SLOT_NAME }}
